---
# üöÄ These tasks aim to define and verify 'wal_g_cron_jobs' for different OS
# üéØ The objective is to ensure accurate setup and validation of wal-g cron jobs

# üìÅ Incorporate shared variables
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Common | Incorporate Shared Variables
  ansible.builtin.include_vars:
    file: ../../../../vars/main.yml

# ‚úÖ Validate wal_g_cron_jobs structure and content
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Common | Validate wal_g_cron_jobs Structure and Content
  assert:
    that:
      - wal_g_cron_jobs | length == 2
      - wal_g_cron_jobs[0].name == "WAL-G: Create daily backup"
      - wal_g_cron_jobs[0].user == "postgres"
      - wal_g_cron_jobs[0].file == "/etc/cron.d/walg"
      - wal_g_cron_jobs[0].job == wal_g_cron_create_job_parts | join('')
      - wal_g_cron_jobs[1].name == "WAL-G: Delete old backups"
      - wal_g_cron_jobs[1].user == "postgres"
      - wal_g_cron_jobs[1].file == "/etc/cron.d/walg"
      - wal_g_cron_jobs[1].job == wal_g_cron_delete_job_parts | join('')
    fail_msg: "Test failed: wal_g_cron_jobs does not have the expected structure or content."
    success_msg: "Test passed: wal_g_cron_jobs has the expected structure and content."

# ‚úÖ Validate wal_g_cron_create_job_parts and wal_g_cron_delete_job_parts content
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Common | Validate wal_g_cron_create_job_parts and wal_g_cron_delete_job_parts Content
  assert:
    that:
      - wal_g_cron_create_job_parts[0] == "[ $(curl -s -o /dev/null -w '%{http_code}' http://{{ inventory_hostname }}:{{ patroni_restapi_port }}) = '200' ]"
      - wal_g_cron_create_job_parts[1] == " && wal-g backup-push {{ postgresql_data_dir }} > {{ postgresql_log_dir }}/walg_backup.log 2>&1"
      - wal_g_cron_delete_job_parts[0] == "[ $(curl -s -o /dev/null -w '%{http_code}' http://{{ inventory_hostname }}:{{ patroni_restapi_port }}) = '200' ]"
      - wal_g_cron_delete_job_parts[1] == " && wal-g delete retain FULL 4 --confirm > {{ postgresql_log_dir }}/walg_delete.log 2>&1"
    fail_msg: "Test failed: wal_g_cron_create_job_parts or wal_g_cron_delete_job_parts do not have the expected content."
    success_msg: "Test passed: wal_g_cron_create_job_parts and wal_g_cron_delete_job_parts have the expected content."

# ===============================================
# üíæ Start Debian-specific operations and tests
# ===============================================

# üìÅ Incorporate Debian-specific variables
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Debian | Incorporate Debian-specific Variables
  ansible.builtin.include_vars:
    file: ../../../../vars/Debian.yml

# üîÑ Define the origin_wal_g_cron_jobs_create_job
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Debian | Define First wal_g_cron Job
  ansible.builtin.set_fact: # yamllint disable rule:line-length
    origin_wal_g_cron_jobs_create_job: "[ $(curl -s -o /dev/null -w '%{http_code}' http://{{ inventory_hostname }}:{{ patroni_restapi_port }}) = '200' ] && wal-g backup-push {{ postgresql_data_dir }} > {{ postgresql_log_dir }}/walg_backup.log 2>&1"

# üñ®Ô∏è Debug the first wal_g_cron job for Debian
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Debian | Debug First wal_g_cron Job
  debug:
    var: wal_g_cron_jobs[0].job

# ‚úÖ Validate the first wal_g_cron job for Debian
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Debian | Validate First wal_g_cron Job
  assert:
    that:
      - wal_g_cron_jobs[0].job == origin_wal_g_cron_jobs_create_job
    fail_msg: "Test failed: wal_g_cron_jobs[0].job is not as expected."
    success_msg: "Test passed: wal_g_cron_jobs[0].job is as expected."

# üîÑ Define the second wal_g_cron job for Debian
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Debian | Define Second wal_g_cron Job
  ansible.builtin.set_fact: # yamllint disable rule:line-length
    origin_wal_g_cron_jobs_delete_job: "[ $(curl -s -o /dev/null -w '%{http_code}' http://{{ inventory_hostname }}:{{ patroni_restapi_port }}) = '200' ] && wal-g delete retain FULL 4 --confirm > {{ postgresql_log_dir }}/walg_delete.log 2>&1"

# üñ®Ô∏è Debug the second wal_g_cron job for Debian
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Debian | Debug Second wal_g_cron Job
  debug:
    var: wal_g_cron_jobs[1].job

# ‚úÖ Validate the second wal_g_cron job for Debian
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | Debian | Validate Second wal_g_cron Job
  assert:
    that:
      - wal_g_cron_jobs[1].job == origin_wal_g_cron_jobs_delete_job
    fail_msg: "Test failed: wal_g_cron_jobs[1].job is not as expected."
    success_msg: "Test passed: wal_g_cron_jobs[1].job is as expected."

# ===============================================
# üöÄ Start RedHat-specific operations and tests
# ===============================================

# üìÅ Incorporate RedHat-specific variables
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | RedHat | Incorporate RedHat-specific Variables
  ansible.builtin.include_vars:
    file: ../../../../vars/RedHat.yml

# üîÑ Define the first wal_g_cron job for RedHat
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | RedHat | Define First wal_g_cron Job
  ansible.builtin.set_fact: # yamllint disable rule:line-length
    origin_wal_g_cron_jobs_create_job: "[ $(curl -s -o /dev/null -w '%{http_code}' http://{{ inventory_hostname }}:{{ patroni_restapi_port }}) = '200' ] && wal-g backup-push {{ postgresql_data_dir }} > {{ postgresql_log_dir }}/walg_backup.log 2>&1"

# üñ®Ô∏è Debug the first wal_g_cron job for RedHat
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | RedHat | Debug First wal_g_cron Job
  debug:
    var: wal_g_cron_jobs[0].job

# ‚úÖ Validate the first wal_g_cron job for RedHat
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | RedHat | Validate First wal_g_cron Job
  assert:
    that:
      - wal_g_cron_jobs[0].job == origin_wal_g_cron_jobs_create_job
    fail_msg: "Test failed: wal_g_cron_jobs[0].job is not as expected."
    success_msg: "Test passed: wal_g_cron_jobs[0].job is as expected."

# üîÑ Define the second wal_g_cron job for RedHat
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | RedHat | Define Second wal_g_cron Job
  ansible.builtin.set_fact: # yamllint disable rule:line-length
    origin_wal_g_cron_jobs_delete_job: "[ $(curl -s -o /dev/null -w '%{http_code}' http://{{ inventory_hostname }}:{{ patroni_restapi_port }}) = '200' ] && wal-g delete retain FULL 4 --confirm > {{ postgresql_log_dir }}/walg_delete.log 2>&1"

# üñ®Ô∏è Debug the second wal_g_cron job for RedHat
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | RedHat | Debug Second wal_g_cron Job
  debug:
    var: wal_g_cron_jobs[1].job

# ‚úÖ Validate the second wal_g_cron job for RedHat
- name: Molecule | Tests | Variables | Asserts | Wal g cron jobs | RedHat | Validate Second wal_g_cron Job
  assert:
    that:
      - wal_g_cron_jobs[1].job == origin_wal_g_cron_jobs_delete_job
    fail_msg: "Test failed: wal_g_cron_jobs[1].job is not as expected."
    success_msg: "Test passed: wal_g_cron_jobs[1].job is as expected."
