---
- name: Include vars
  ansible.builtin.include_vars:
    file: ../../../../vars/main.yml

# pg_probackup[0].value
- name: Setting pg_probackup_first_value
  ansible.builtin.set_fact: # yamllint disable rule:line-length
    pg_probackup_first_value: "pg_probackup-{{ pg_probackup_version }} restore -B {{ pg_probackup_dir }} --instance {{ pg_probackup_instance }} -j {{ pg_probackup_threads }} {{ pg_probackup_add_keys }}"

- name: Debug pg_probackup[0].value
  debug:
    var: pg_probackup[0].value

- name: Assert pg_probackup[0].value
  assert:
    that:
      - pg_probackup[0].value == pg_probackup_first_value
    fail_msg: >
      Assertion failed: pg_probackup[0].value is "{{ pg_probackup[0].value }}",
      but expected "{{ pg_probackup_first_value}}"
    success_msg: "pg_probackup[0].value is correct"


# pg_probackup_patroni_cluster_bootstrap_command
- name: Setting host facts using complex arguments
  ansible.builtin.set_fact: # yamllint disable rule:line-length
    origin_pg_probackup_patroni_cluster_bootstrap_command: "pg_probackup-{{ pg_probackup_version }} restore -B {{ pg_probackup_dir }} --instance {{ pg_probackup_instance }} -j {{ pg_probackup_threads }} {{ pg_probackup_add_keys }}"

- name: Debug pg_probackup_patroni_cluster_bootstrap_command
  debug:
    var: pg_probackup_patroni_cluster_bootstrap_command

- name: Assert pg_probackup_patroni_cluster_bootstrap_command
  assert:
    that:
      - pg_probackup_patroni_cluster_bootstrap_command == origin_pg_probackup_patroni_cluster_bootstrap_command
    fail_msg: >
      Assertion failed: pg_probackup_patroni_cluster_bootstrap_command is "{{ pg_probackup_patroni_cluster_bootstrap_command }}",
      but expected "{{ origin_pg_probackup_patroni_cluster_bootstrap_command }}"
    success_msg: "pg_probackup_patroni_cluster_bootstrap_command is correct"